#!/bin/bash
## TraME-Rcpp config script

# get working directory
WDIR=${PWD}
TRAME_BUILD_PATH=${WDIR}/src

# set build and optimization flags

TRAME_OPT_FLAGS="-O3 -Wall"

if [[ !($OSTYPE == darwin*) ]] ; then
    echo "TraME: using OpenMP"
    TRAME_OPT_FLAGS="${TRAME_OPT_FLAGS} -fopenmp -DTRAME_USE_OMP"
fi

# switch between OSX and Linux
if [[ $OSTYPE == darwin* ]] ; then

    # look for any Gurobi directories, then choose the latest one
    grb_dirs=( /Library/gurobi* )
    nmb_dirs=${#grb_dirs[@]}
    grb_latest=${grb_dirs[$nmb_dirs-1]}

    # 'grb_dirs' will always be non-empty; in the case where no Gurobi directories are detected,
    # grb_dirs will contain just '/Library/gurobi*', which is not an actual directory, so we need 
    # the following sanity check
    if [[ !("${TRAME_LP}" == "glpk") && -d $grb_latest ]] ; then

        grb_lib_path=( "$grb_latest/mac64/lib/libgurobi*.so" )

        grb_lib_latest=${grb_lib_path[0]}
        grb_lib_name=$(basename ${grb_lib_latest})
        grb_lib_num=${grb_lib_name//[^0-9]/}

        LP_INCLUDE_PATH="-DTRAME_USE_GUROBI -I$grb_latest/mac64/include"
        LP_LIB_PATH="-L$grb_latest/mac64/lib"
        LP_LIBS="-lgurobi${grb_lib_num}"
        LP_LIB_RPATH="-Wl,-rpath,$grb_latest/mac64/lib"

        echo ""
        echo "TraME: using Gurobi. LP_INCLUDE_PATH set to ${LP_INCLUDE_PATH}"
    else
        # look for GLPK, or download it
        if [ -f ${WDIR}/glpk_tmp/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I${WDIR}/glpk_tmp/include"
            LP_LIB_PATH="-L${WDIR}/glpk_tmp/lib"
        elif [ -f /usr/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/usr/include"
            LP_LIB_PATH="-L/usr/lib"
        elif [ -f /usr/local/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/usr/local/include"
            LP_LIB_PATH="-L/usr/local/lib"
        elif [ -f /opt/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/opt/include"
            LP_LIB_PATH="-L/opt/lib"
        elif [ -f /opt/local/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/opt/local/include"
            LP_LIB_PATH="-L/opt/local/lib"
        else
            echo ""
            echo "TraME: cannot find a linear programming solver. Downloading and building GLPK."
            echo ""

            mkdir ${WDIR}/glpk_tmp
            cd glpk_tmp

            curl -O http://ftp.gnu.org/gnu/glpk/glpk-4.63.tar.gz > /dev/null 2>&1
            tar -xzf glpk-4.63.tar.gz > /dev/null 2>&1
            cd glpk-4.63
            ./configure --prefix=${WDIR}/glpk_tmp > /dev/null 2>&1
            make > /dev/null 2>&1
            make PREFIX=${WDIR}/glpk_tmp install > /dev/null 2>&1

            cd ${WDIR}

            rm -f ${WDIR}/glpk_tmp/glpk-4.63.tar.gz
            rm -rf ${WDIR}/glpk_tmp/glpk-4.63
            echo ""

            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I${WDIR}/glpk_tmp/include"
            LP_LIB_PATH="-L${WDIR}/glpk_tmp/lib"
        fi
    
    LP_LIBS="-lglpk"
    LP_LIB_RPATH=

    echo ""
    echo "TraME: using GLPK. LP_INCLUDE_PATH set to ${LP_INCLUDE_PATH}"
    fi
elif [[ $OSTYPE == *linux* ]] ; then

    # look for any Gurobi directories, then choose the latest one
    grb_dirs=( /opt/gurobi* )
    nmb_dirs=${#grb_dirs[@]}
    grb_latest=${grb_dirs[$nmb_dirs-1]}

    # 'grb_dirs' will always be non-empty; in the case where no Gurobi directories are detected,
    # grb_dirs will contain just '/Library/gurobi*', which is not an actual directory, so we need 
    # the following sanity check
    if [[ !("${TRAME_LP}" == "glpk") && -d $grb_latest ]] ; then
        grb_lib_path=( "$grb_latest/linux64/lib/libgurobi*.so" )

        grb_lib_latest=${grb_lib_path[0]}
        grb_lib_name=$(basename ${grb_lib_latest})
        grb_lib_num=${grb_lib_name//[^0-9]/}

        LP_INCLUDE_PATH="-DTRAME_USE_GUROBI -I$grb_latest/linux64/include"
        LP_LIB_PATH="-L$grb_latest/linux64/lib"
        LP_LIBS="-lgurobi${grb_lib_num}"
        LP_LIB_RPATH="-Wl,-rpath,$grb_latest/linux64/lib"

        echo ""
        echo "TraME: using Gurobi. LP_INCLUDE_PATH set to ${LP_INCLUDE_PATH}"
    else
        # look for GLPK, or download it
        if [ -f ${WDIR}/glpk_tmp/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I${WDIR}/glpk_tmp/include"
            LP_LIB_PATH="-L${WDIR}/glpk_tmp/lib"
        elif [ -f /usr/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/usr/include"
            LP_LIB_PATH="-L/usr/lib"
        elif [ -f /usr/local/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/usr/local/include"
            LP_LIB_PATH="-L/usr/local/lib"
        elif [ -f /opt/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/opt/include"
            LP_LIB_PATH="-L/opt/lib"
        elif [ -f /opt/local/include/glpk.h ]; then
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/opt/local/include"
            LP_LIB_PATH="-L/opt/local/lib"
        else
            echo ""
            echo "TraME: cannot find a linear programming solver. Downloading and building GLPK."
            echo ""

            mkdir ${WDIR}/glpk_tmp
            cd glpk_tmp

            curl -O http://ftp.gnu.org/gnu/glpk/glpk-4.63.tar.gz > /dev/null 2>&1
            tar -xzf glpk-4.63.tar.gz > /dev/null 2>&1
            cd glpk-4.63
            ./configure --prefix=${WDIR}/glpk_tmp > /dev/null 2>&1
            make > /dev/null 2>&1
            make PREFIX=${WDIR}/glpk_tmp install > /dev/null 2>&1

            cd ${WDIR}

            rm -f ${WDIR}/glpk_tmp/glpk-4.63.tar.gz
            rm -rf ${WDIR}/glpk_tmp/glpk-4.63
            echo ""

            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I${WDIR}/glpk_tmp/include"
            LP_LIB_PATH="-L${WDIR}/glpk_tmp/lib"
        fi
    
    LP_LIBS="-lglpk"
    LP_LIB_RPATH=

    echo ""
    echo "TraME: using GLPK. LP_INCLUDE_PATH set to ${LP_INCLUDE_PATH}"
    fi
else
    LP_INCLUDE_PATH=
    LP_LIB_PATH=
    LP_LIBS=
    LP_LIB_RPATH=
fi

# create Makefile

sed -e "s|@CC@|${CC}|" \
    -e "s|@CXX@|${CXX}|" \
    -e "s|@FC@|${FC}|" \
    -e "s|@TRAME_OPT_FLAGS@|${TRAME_OPT_FLAGS}|" \
    -e "s|@TRAME_BUILD_PATH@|${TRAME_BUILD_PATH}|" \
    -e "s|@LP_INCLUDE_PATH@|${LP_INCLUDE_PATH}|" \
    -e "s|@LP_LIB_PATH@|${LP_LIB_PATH}|" \
    -e "s|@LP_LIBS@|${LP_LIBS}|" \
    -e "s|@LP_LIB_RPATH@|${LP_LIB_RPATH}|" \
    src/Makevars.in > src/Makevars
