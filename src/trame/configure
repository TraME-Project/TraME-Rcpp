#!/bin/bash
## TraME config script

if [ -z ${CC+x} ]; then 
    CC=gcc
fi
if [ -z ${CXX+x} ]; then 
    CXX=g++
fi
if [ -z ${FC+x} ]; then 
    FC=gfortran
fi

if [[ $USER == keith* ]]; then 
    CC=gcc-mp-5
    CXX=g++-mp-5
    FC=gfortran-mp-5
fi

if [ -z ${ARMA_INCLUDE_PATH+x} ]; then 
    ARMA_INCLUDE_PATH="-I./include"
fi

TRAME_OPT_FLAGS="-O2"
TRAME_SHLIB_NAME="libtrame.so"
TRAME_INSTALL_PATH="/usr/local"

if [[ $OSTYPE == darwin* ]] ; then
    if [[ !(-z ${TRAME_R_VERSION+x}) ]]; then 
        TRAME_SHLIB_FLAGS="-dynamiclib -install_name "@loader_path/${TRAME_SHLIB_NAME}" -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress"
        #TRAME_SHLIB_FLAGS="-dynamiclib -install_name "@loader_path/${TRAME_SHLIB_NAME}""

        TRAME_BLAS_LAPACK="${TRAME_LAPACK_LIBS} ${TRAME_BLAS_LIBS}"
    else
        TRAME_SHLIB_FLAGS="-dynamiclib -install_name "${TRAME_INSTALL_PATH}/lib/${TRAME_SHLIB_NAME}" -Wl,-headerpad_max_install_names -undefined dynamic_lookup -single_module -multiply_defined suppress"
        #TRAME_SHLIB_FLAGS="-dynamiclib -install_name "${TRAME_INSTALL_PATH}/lib/${TRAME_SHLIB_NAME}""

        TRAME_BLAS_LAPACK="-framework Accelerate"
    fi

    # look for any Gurobi directories, then choose the latest one
    grb_dirs=( /Library/gurobi* )
    nmb_dirs=${#grb_dirs[@]}
    grb_latest=${grb_dirs[$nmb_dirs-1]}

    # 'grb_dirs' will always be non-empty; in the case where no Gurobi directories are detected,
    # grb_dirs will contain just '/Library/gurobi*', which is not an actual directory, so we need 
    # the following sanity check
    if [[ -z ${TRAME_USE_GLPK+x} && -d $grb_latest ]] ; then
        echo "TraME: using Gurobi"

        grb_lib_path=( "$grb_latest/mac64/lib/libgurobi*.so" )

        grb_lib_latest=${grb_lib_path[0]}
        grb_lib_name=$(basename ${grb_lib_latest})
        grb_lib_num=${grb_lib_name//[^0-9]/}

        LP_INCLUDE_PATH="-DTRAME_USE_GUROBI -I$grb_latest/mac64/include"
        LP_LIB_PATH="-L$grb_latest/mac64/lib"
        LP_LIBS="-lgurobi${grb_lib_num}"
        LP_LIB_RPATH="-Wl,-rpath,$grb_latest/mac64/lib"
    else
        # look for GLPK, or give up
        if [ -f /usr/local/include/glpk.h ]; then
            echo "TraME: using GLPK"
            
            LP_INCLUDE_PATH="-DTRAME_USE_GLPK -I/usr/local/include"
            LP_LIB_PATH="-L/usr/local/lib"
            LP_LIBS="-lglpk"
            LP_LIB_RPATH=
        else
            LP_INCLUDE_PATH=
            LP_LIB_PATH=
            LP_LIBS=
            LP_LIB_RPATH=
        fi
    fi
elif [[ $OSTYPE == *linux* ]] ; then
    TRAME_OPT_FLAGS="-fPIC ${TRAME_OPT_FLAGS}"
    TRAME_SHLIB_FLAGS="-fPIC -shared"
    TRAME_BLAS_LAPACK="-lblas -llapack"

    if [ -d "/opt/gurobi"* ] ; then
        grb_dirs=( /opt/gurobi* )
        nmb_dirs=${#grb_dirs[@]}

        LP_INCLUDE_PATH="-I${grb_dirs[$nmb_dirs-1]}/linux64/include"
        LP_LIB_PATH="-L${grb_dirs[$nmb_dirs-1]}/linux64/lib"
        LP_LIBS="-lgurobi65"
        LP_LIB_RPATH="-Wl,-rpath,${grb_dirs[$nmb_dirs-1]}/linux64/lib"
    else
        LP_INCLUDE_PATH=
        LP_LIB_PATH=
        LP_LIBS=
        LP_LIB_RPATH=
    fi
else
    TRAME_BLAS_LAPACK="-lblas -llapack"

    LP_INCLUDE_PATH=
    LP_LIB_PATH=
    LP_LIBS=
    LP_LIB_RPATH=
fi

sed -e "s|@CC@|${CC}|" \
    -e "s|@CXX@|${CXX}|" \
    -e "s|@FC@|${FC}|" \
    -e "s|@ARMA_INCLUDE_PATH@|${ARMA_INCLUDE_PATH}|" \
    -e "s|@TRAME_BLAS_LAPACK@|${TRAME_BLAS_LAPACK}|" \
    -e "s|@TRAME_OPT_FLAGS@|${TRAME_OPT_FLAGS}|" \
    -e "s|@TRAME_SHLIB_NAME@|${TRAME_SHLIB_NAME}|" \
    -e "s|@TRAME_SHLIB_FLAGS@|${TRAME_SHLIB_FLAGS}|" \
    -e "s|@TRAME_INSTALL_PATH@|${TRAME_INSTALL_PATH}|" \
    -e "s|@LP_INCLUDE_PATH@|${LP_INCLUDE_PATH}|" \
    -e "s|@LP_LIB_PATH@|${LP_LIB_PATH}|" \
    -e "s|@LP_LIBS@|${LP_LIBS}|" \
    -e "s|@LP_LIB_RPATH@|${LP_LIB_RPATH}|" \
    Makefile.in > Makefile
